generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  username    String        @unique
  password    String
  name        String
  role        UserRole      @default(CUSTOMER)
  email       String        @unique
  telephone   String        @unique
  reservation Reservation[]
}

model Table {
  id          String        @id @default(uuid())
  name        String        @unique
  status      TableStatus   @default(IDLE)
  seat        Int
  passcode    String
  usage       Usage[]
  reservation Reservation[]
}

model Order {
  id       String      @id @default(uuid())
  quantity Int
  price    Float
  status   OrderStatus @default(PENDING)
  menu     Menu        @relation(fields: [menuId], references: [id], onDelete: Cascade)
  menuId   String      @map("menu_id")
  usage    Usage       @relation(fields: [usageId], references: [id], onDelete: Cascade)
  usageId  String      @map("usage_id")
}

model Reservation {
  id      String            @id @default(uuid())
  seat    Int
  status  ReservationStatus @default(CONFIRMED)
  user    User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String            @map("user_id")
  table   Table             @relation(fields: [tableId], references: [id], onDelete: Cascade)
  tableId String            @map("table_id")
}

model Menu {
  id    String  @id @default(uuid())
  name  String  @unique
  price Float
  image String
  order Order[]
}

model Billing {
  id      String     @id @default(uuid())
  price   Float
  status  BillStatus @default(UNPAID)
  usageId String     @map("usage_id")
  Usage   Usage?
}

model Usage {
  id        String    @id @default(uuid())
  start     DateTime
  end       DateTime?
  order     Order[]
  bill      Billing?  @relation(fields: [billingId], references: [id])
  table     Table?    @relation(fields: [tableId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tableId   String?
  billingId String?   @unique @map("billing_id")
}

enum TableStatus {
  IDLE
  EATING
  RESERVED
}

enum BillStatus {
  PAID
  UNPAID
  CANCELED
}

enum OrderStatus {
  PENDING
  COOKING
  SERVED
  CANCELED
}

enum ReservationStatus {
  CONFIRMED
  CANCELED
}

enum UserRole {
  MANAGER
  CHEF
  STAFF
  CUSTOMER
}
